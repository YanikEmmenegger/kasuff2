# Redirect from an alternate domain to kasuff.com
server {
    listen 443 ssl;  # Listen on port 443 for HTTPS connections
    server_name kasuff.yanik.pro;  # Specify the server name for the alternate domain

    ssl_certificate /etc/letsencrypt/live/kasuff.yanik.pro/fullchain.pem;  # SSL certificate for the alternate domain
    ssl_certificate_key /etc/letsencrypt/live/kasuff.yanik.pro/privkey.pem;  # SSL private key for the alternate domain

    # Redirect all requests from kasuff.yanik.pro to kasuff.com
    return 308 https://kasuff.com$request_uri;  # Permanent redirect to kasuff.com
}

# Redirect HTTP requests for kasuff.yanik.pro to HTTPS
server {
    listen 80;  # Listen on port 80 for HTTP connections
    server_name kasuff.yanik.pro;  # Specify the alternate domain for HTTP

    # Redirect all HTTP requests to HTTPS
    return 308 https://kasuff.com$request_uri;  # Redirect to HTTPS version of kasuff.yanik.pro
}

# Main server block for kasuff.com
server {
    listen 443 ssl;  # Listen on port 443 for HTTPS connections
    server_name kasuff.com;

    ssl_certificate /etc/letsencrypt/live/kasuff.com/fullchain.pem;  # SSL certificate for kasuff.com
    ssl_certificate_key /etc/letsencrypt/live/kasuff.com/privkey.pem;  # SSL private key for kasuff.com

    # ================================
    # IP Blacklisting Configuration
    # ================================

    # Deny the specific IP address
    deny 213.232.87.228;          # Block this IP address

    # Allow all other IPs
    allow all;

    # ================================
    # Block Common Bot User-Agents
    # ================================
    if ($http_user_agent ~* (bot|crawler|spider|python|perl|scrapy|curl|wget)) {
        return 403;  # Block access with a 403 Forbidden response
    }

    # Standard web server location block for serving the main application
    location / {
        proxy_pass http://backend:2608;  # Forward requests to the backend server running on port 2608
        proxy_set_header Host $host;  # Forward the original Host header to the backend
        proxy_set_header X-Real-IP $remote_addr;  # Forward the original client's IP address to the backend
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward proxy chain IPs to track client origin
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original request protocol (HTTP or HTTPS)
    }

    # WebSocket configuration for Socket.IO at /socket.io/ location
    location /socket.io/ {
        proxy_pass http://backend:2608;  # Forward WebSocket requests to the backend server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;  # Allow protocol upgrade for WebSocket
        proxy_set_header Connection "upgrade";  # Maintain persistent connection for WebSocket
        proxy_set_header Host $host;  # Forward the original Host header to the backend
        proxy_set_header X-Real-IP $remote_addr;  # Forward the client's real IP address to the backend
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Add client IP to the chain for tracking
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original protocol (HTTP/HTTPS)
    }
}

# Redirect HTTP requests on kasuff.com to HTTPS
server {
    listen 80;  # Listen on port 80 for HTTP connections
    server_name kasuff.com;  # Specify the main domain name

    # Redirect all HTTP requests to HTTPS
    return 308 https://kasuff.com$request_uri;  # Permanent redirect to HTTPS for security
}
